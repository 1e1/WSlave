diff --git a/libraries/EthernetBonjour/EthernetBonjour.cpp b/libraries/EthernetBonjour/EthernetBonjour.cpp
index af28af2..c9db912 100644
--- a/libraries/EthernetBonjour/EthernetBonjour.cpp
+++ b/libraries/EthernetBonjour/EthernetBonjour.cpp
@@ -18,16 +18,16 @@
 //  <http://www.gnu.org/licenses/>.
 //
 
-#define  HAS_SERVICE_REGISTRATION      1  // disabling saves about 1.25 kilobytes
-#define  HAS_NAME_BROWSING             1  // disable together with above, additionally saves about 4.3 kilobytes
+#define  HAS_SERVICE_REGISTRATION      0  // disabling saves about 1.25 kilobytes
+#define  HAS_NAME_BROWSING             0  // disable together with above, additionally saves about 4.3 kilobytes
 
 #include <string.h>
 #include <stdlib.h>
 
-extern "C" {
-   #include "wiring.h"
+//extern "C" {
+   #include "Arduino.h"
    #include <utility/EthernetUtil.h>
-}
+//}
 
 #include <utility/EthernetCompat.h>
 #include "EthernetBonjour.h"
diff --git a/libraries/EthernetBonjour/utility/EthernetCompat.cpp b/libraries/EthernetBonjour/utility/EthernetCompat.cpp
index 18df0df..9a56061 100644
--- a/libraries/EthernetBonjour/utility/EthernetCompat.cpp
+++ b/libraries/EthernetBonjour/utility/EthernetCompat.cpp
@@ -26,9 +26,9 @@
 
 #include <utility/socket.h>
 #include <utility/w5100.h>
-extern "C" {
-   #include "wiring.h"
-}
+//extern "C" {
+   #include "Arduino.h"
+//}
 
 #define TXBUF_BASE      0x4000
 #define SMASK           0x07FF
diff --git a/libraries/EthernetBonjour/utility/EthernetUtil.cpp b/libraries/EthernetBonjour/utility/EthernetUtil.cpp
new file mode 100644
index 0000000..ceb0f05
--- /dev/null
+++ b/libraries/EthernetBonjour/utility/EthernetUtil.cpp
@@ -0,0 +1,85 @@
+//  Copyright (C) 2010 Georg Kaindl
+//  http://gkaindl.com
+//
+//  This file is part of Arduino EthernetBonjour.
+//
+//  EthernetBonjour is free software: you can redistribute it and/or
+//  modify it under the terms of the GNU Lesser General Public License
+//  as published by the Free Software Foundation, either version 3 of
+//  the License, or (at your option) any later version.
+//
+//  EthernetBonjour is distributed in the hope that it will be useful,
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+//  GNU Lesser General Public License for more details.
+//
+//  You should have received a copy of the GNU Lesser General Public
+//  License along with EthernetBonjour. If not, see
+//  <http://www.gnu.org/licenses/>.
+//
+
+#include <utility/EthernetUtil.h>
+
+#if defined(__ETHERNET_UTIL_BONJOUR__)
+
+uint16_t ethutil_swaps(uint16_t i);
+uint32_t ethutil_swapl(uint32_t l);
+
+extern uint16_t ethutil_htons(unsigned short hostshort)
+{
+#if ( SYSTEM_ENDIAN == _ENDIAN_LITTLE_ )
+	return ethutil_swaps(hostshort);
+#else
+	return hostshort;
+#endif
+}
+
+extern uint32_t ethutil_htonl(unsigned long hostlong)
+{
+#if ( SYSTEM_ENDIAN == _ENDIAN_LITTLE_ )
+	return ethutil_swapl(hostlong);
+#else
+	return hostlong;
+#endif
+}
+
+extern uint16_t ethutil_ntohs(unsigned short netshort)
+{
+#if ( SYSTEM_ENDIAN == _ENDIAN_LITTLE_ )	
+	return ethutil_swaps(netshort);
+#else
+	return netshort;
+#endif  
+}
+
+extern uint32_t ethutil_ntohl(unsigned long netlong)
+{
+#if ( SYSTEM_ENDIAN == _ENDIAN_LITTLE_ )
+	return ethutil_swapl(netlong);
+#else
+	return netlong;
+#endif
+}
+
+#pragma mark -
+#pragma mark Private
+
+uint16_t ethutil_swaps(uint16_t i)
+{
+	uint16_t ret=0;
+	ret = (i & 0xFF) << 8;
+	ret |= ((i >> 8)& 0xFF);
+	return ret;	
+}
+
+uint32_t ethutil_swapl(uint32_t l)
+{
+	uint32_t ret=0;
+	ret = (l & 0xFF) << 24;
+	ret |= ((l >> 8) & 0xFF) << 16;
+	ret |= ((l >> 16) & 0xFF) << 8;
+	ret |= ((l >> 24) & 0xFF);
+	return ret;
+}
+
+#endif // __ETHERNET_UTIL_BONJOUR__
\ No newline at end of file
